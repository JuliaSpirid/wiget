<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Countdown Timer</title>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.4/moment.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/canvas-confetti@1.5.1/dist/confetti.browser.min.js"></script>
  <style>
    body {
      margin: 0;
      height: 100vh;
      background-color: #ffffff;
      color: #37352F;
      font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, "Apple Color Emoji", Arial, sans-serif, "Segoe UI Emoji", "Segoe UI Symbol";
      display: flex;
      justify-content: center;
      align-items: center;
    }
    #timer {
      display: flex;
      flex-direction: row;
      text-transform: uppercase;
      font-size: 0.7em;
      letter-spacing: 5px;
      text-align: center;
    }
    .days, .hours, .minutes, .seconds {
      margin: 0 10px;
    }
    .numbers {
      font-weight: bold;
      font-size: 3em;
    }
  </style>
</head>

<body>
  <div id="timer">
    <div class="days">
      <div id="days" class="numbers"></div>
      days
    </div>
    <div class="hours">
      <div id="hours" class="numbers"></div>
      hours
    </div>
    <div class="minutes">
      <div id="minutes" class="numbers"></div>
      minutes
    </div>
    <div class="seconds">
      <div id="seconds" class="numbers"></div>
      seconds
    </div>
  </div>

  <script>
    let countUp = false; // false - обратный отсчёт, true - счёт времени после события

    const targetDate = moment('2025-06-01T09:00:00.000Z'); // Конечная дата
    const startDateOfTimer = moment('2025-04-18T03:35:06.857Z'); // Старт отсчёта

    const padLeft = (num) => String(num).padStart(2, '0');

    let intervalId;

    function triggerConfetti() {
      confetti({
        particleCount: 150,
        spread: 70,
        origin: { y: 0.6 }
      });
    }

    function updateTimer() {
      let now = moment();
      let referenceTime = startDateOfTimer.isAfter(now) ? startDateOfTimer : now;

      let diff = countUp ? moment.duration(referenceTime.diff(startDateOfTimer))
                         : moment.duration(targetDate.diff(referenceTime));

      if (diff.asMilliseconds() <= 0) {
        clearInterval(intervalId);
        document.getElementById("timer").innerHTML = "Countdown ended!";
        triggerConfetti();
        return;
      }

      let days = Math.floor(diff.asDays());
      diff.subtract(moment.duration(days, 'days'));

      let hours = Math.floor(diff.asHours());
      diff.subtract(moment.duration(hours, 'hours'));

      let minutes = Math.floor(diff.asMinutes());
      diff.subtract(moment.duration(minutes, 'minutes'));

      let seconds = Math.floor(diff.asSeconds());

      document.getElementById("days").innerText = padLeft(days);
      document.getElementById("hours").innerText = padLeft(hours);
      document.getElementById("minutes").innerText = padLeft(minutes);
      document.getElementById("seconds").innerText = padLeft(seconds);
    }

    intervalId = setInterval(updateTimer, 1000);
    updateTimer(); // мгновенный первый запуск
  </script>
</body>
</html>
